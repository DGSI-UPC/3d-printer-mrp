# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
*.manifest
*.spec
pip-log.txt
pip-delete-this-directory.txt
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.log
.hypothesis/
.pytest_cache/
celerybeat-schedule
instance/

# Virtualenv
.venv/
venv/
ENV/
env/
env.bak/
venv.bak/

# Docker
# docker-compose.yml is usually versioned.
# .dockerignore has its own purpose and is not ignored by .gitignore
# If you have local Docker build context files you don't want to commit:
# .docker/
# docker-compose.override.yml # Often used for local dev overrides

# IDEs and editors
.idea/
.vscode/
*.sublime-workspace
*.sublime-project
.project
.classpath
.cproject
.settings/
*.DS_Store
Thumbs.db

# Secrets - IMPORTANT
.env
*.env
.env.*
!.env.example # It's common to commit an example env file

# Application Specific
# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
# Data files (if you generate data you don't want to commit)
data/
# data/*.json # If ALL json in data should be ignored, but be careful with initial_conditions_example.json
!data/initial_conditions_example.json # Ensure example data is NOT ignored

# MongoDB data (if stored locally outside of Docker volume, which is not typical for this setup)
# mongodata/

# Streamlit specific cache (if any)
# .streamlit/ # Older versions might have used this, check if your version creates local cache files

# Operating System Files
.DS_Store
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Other build artifacts
*.tar.gz
*.zip